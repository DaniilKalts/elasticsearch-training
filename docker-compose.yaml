services:
  postgres:
    container_name: elasticsearch-training-postgres
    build:
      context: .
      dockerfile: Dockerfile.postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pg_volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    container_name: elasticsearch-training-api
    image: elasticsearch-training-api
    build:
      context: .
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - ./config/app.dev.yaml:/app/config/app.dev.yaml:ro
      - ./db/migrations:/app/db/migrations:ro
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  pg_volume: